import { Field } from '@hubspot/cms-components/fields';
import { ViteDevServer } from 'vite';
export declare const formatAsTypeName: (str: string) => string;
/**
 * If the filePath file is in the modules folder, find and return the closest index file.
 * If the filePath that was updated in modules root, return that path instead.
 */
export declare const getIndexFile: (filePath: string, projectRoot: string) => {
    indexFilePath: string;
    isRootModuleFile: boolean;
};
export declare const getIndexFileFields: (indexFilePath: string, indexFileName: string, viteServer: ViteDevServer) => Promise<Field[]>;
/**
 * When a file inside of a module folder is updated, find the exported fields object
 * and try to generate a type file for it. If a types file exists, checks for the auto-gen
 * comment at the top before overwriting.
 */
export declare const maybeUpdateFields: (filePath: string, viteServer: ViteDevServer, projectRoot: string) => Promise<void>;
/**
 * Generate field types for all modules once and start module file watcher to generate on add/change
 */
export declare const startFieldsTypeGenWatcher: (viteServer: ViteDevServer, projectRoot: string) => void;
