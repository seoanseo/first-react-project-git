"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.lint = void 0;
const fs_extra_1 = __importDefault(require("fs-extra"));
const extensions_1 = require("../../constants/extensions");
const validateHubl_1 = require("../../api/validateHubl");
const fs_1 = require("../fs");
const path_1 = require("../path");
async function lint(accountId, filepath, callback) {
    const stats = await fs_extra_1.default.stat(filepath);
    const files = stats.isDirectory() ? await (0, fs_1.walk)(filepath) : [filepath];
    if (!(files && files.length)) {
        return [];
    }
    return Promise.all(files
        .filter(file => extensions_1.HUBL_EXTENSIONS.has((0, path_1.getExt)(file)))
        .map(async (file) => {
        const source = await fs_extra_1.default.readFile(file, { encoding: 'utf8' });
        if (!(source && source.trim())) {
            const result = { file, validation: null };
            if (callback) {
                callback(result);
            }
            return result;
        }
        const { data: validation } = await (0, validateHubl_1.validateHubl)(accountId, source);
        const result = {
            file,
            validation,
        };
        if (callback) {
            callback(result);
        }
        return result;
    }));
}
exports.lint = lint;
