import { FieldType } from '../fields/fieldTypes.js';
export declare type IconStyle = 'REGULAR' | 'OUTLINE' | 'SOLID' | 'LIGHT';
export declare type IconSupplementalFieldValue = {
    name?: string;
    viewPort: number[];
    svg: {
        [k in IconStyle]?: string;
    };
    unicode?: string;
    altIconName: string;
    styles: IconStyle[];
    type?: IconStyle;
    categories: any[];
    icon_set: 'fontawesome-5' | 'fontawesome-5.0.10' | 'fontawesome-5.14.0' | 'fontawesome-6.4.2';
};
export declare type IconSupplementalFieldValueMeta = BaseFieldValue<'icon', IconSupplementalFieldValue>;
export declare function unstable_useIconSupplementalFieldValue(fieldPath: string): IconSupplementalFieldValue | null;
export declare type RichTextSupplementalFieldValue = {
    content: string;
};
export declare type RichTextSupplementalFieldValueMeta = BaseFieldValue<'richtext', RichTextSupplementalFieldValue>;
export declare function unstable_useRichTextSupplementalFieldValue(fieldPath: string): RichTextSupplementalFieldValue | null;
export declare type FormSupplementalFieldValue = {
    formId: string;
    content: string;
};
export declare type FormSupplementalFieldValueMeta = BaseFieldValue<'form', FormSupplementalFieldValue>;
export declare function unstable_useFormSupplementalFieldValue(fieldPath: string): FormSupplementalFieldValue | null;
export declare type CtaSupplementalFieldValue = {
    ctaId: string;
    content: string;
};
export declare type CtaSupplementalFieldValueMeta = BaseFieldValue<'cta', CtaSupplementalFieldValue>;
export declare function unstable_useCtaSupplementalFieldValue(fieldPath: string): CtaSupplementalFieldValue | null;
export declare type MenuSupplementalFieldValue = {
    menuId: string;
    content: string;
};
export declare type MenuSupplementalFieldValueMeta = BaseFieldValue<'menu', MenuSupplementalFieldValue>;
export declare function unstable_useMenuSupplementalFieldValue(fieldPath: string): MenuSupplementalFieldValue | null;
export declare type SimpleMenuSupplementalFieldValue = {
    simpleMenuId: string;
    content: string;
};
export declare type SimpleMenuSupplementalFieldValueMeta = BaseFieldValue<'simplemenu', SimpleMenuSupplementalFieldValue>;
export declare function unstable_useSimpleMenuSupplementalFieldValue(fieldPath: string): SimpleMenuSupplementalFieldValue | null;
interface BaseFieldValue<K extends FieldType, V> {
    type: K;
    value: V;
}
export {};
